整个实现的逻辑
1. 创建登录页面组件
目的: 提供一个界面让用户输入用户名和密码进行登录。

在 LoginPage.vue 中：
使用表单（Form）组件来接受用户输入。
当用户提交表单时，通过 axios 向后端发送登录请求。

2. 设置路由
目的: 为登录页面创建一个单独的路由，使用户可以访问该页面。

在 router.js 中：
添加 Login 路由，使用户可以通过 /login 路径访问登录页面。

3. 实现登录逻辑
目的: 处理用户输入的凭据并验证身份。

在 LoginPage.vue 中：
通过 axios 发送POST请求到后端的登录API。
如果登录成功，后端会返回一个令牌（token），用于标识用户的登录状态。
将这个令牌存储在 localStorage 中，并重定向用户到主页。

4. 处理身份验证状态

目的: 在每个请求中附加令牌，以便后端可以验证用户身份。

在 main.js 中：
使用 axios 拦截器，在每个请求的头部添加 Authorization 字段，包含令牌。

5. 保护路由

目的: 防止未登录用户访问受保护的页面。

在 router.js 中：
添加导航守卫，在每次路由变化时检查用户是否已登录（即是否有令牌）。
如果用户未登录且试图访问受保护的页面，重定向到登录页面。


